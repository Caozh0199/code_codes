{"ast":null,"code":"export default {\n  name: \"HouseDetail\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      logistics: {}\n    };\n  },\n  created() {\n    // this.$request.put('/logistics/updateCount/' + this.id).then(res => {\n    //   this.load()\n    // })\n  },\n  methods: {\n    load() {\n      this.$request.get('/logistics/selectById/' + this.id).then(res => {\n        this.logistics = res.data || {};\n\n        // var map = new BMapGL.Map('container'); // 创建Map实例\n        // map.centerAndZoom(new BMapGL.Point(this.logistics.longitude, this.logistics.latitude), 16); // 初始化地图,设置中心点坐标和地图级别\n        // map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放\n        // let point = new BMapGL.Point(this.logistics.longitude, this.logistics.latitude)\n        // let marker = new BMapGL.Marker(point); // 创建标注\n        // map.addOverlay(marker);\n        // let opts = {\n        //   width : 300, // 信息窗口宽度\n        //   height: 100, // 信息窗口高度\n        //   title : this.logistics.name , // 信息窗口标题\n        // }\n        // let infoWindow = new BMapGL.InfoWindow(\n        //     \"<b>地址</b>：\" + this.logistics.address + \"<br/>\",\n        //     opts); // 创建信息窗口对象\n        //\n        // marker.addEventListener(\"click\", function(){\n        //   map.openInfoWindow(infoWindow,point); //开启信息窗口\n        // });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","id","$route","query","logistics","created","methods","load","$request","get","then","res"],"sources":["src/views/front/location.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 60%; margin: 10px auto\">\r\n    <div style=\"display: flex; grid-gap: 20px\">\r\n      <div style=\"flex: 1\">\r\n        <img :src=\"logistics.img\" alt=\"\" style=\"width: 100%\">\r\n      </div>\r\n      <div style=\"flex: 1\">\r\n\r\n        <div style=\" margin: 20px 0; display: flex; align-items: center\">\r\n          <div style=\"font-size: 22px; font-weight: bold; flex: 1\">{{ logistics.name }}</div>\r\n          <div style=\"color: #666; font-size: 13px\">{{ logistics.count }}浏览</div>\r\n        </div>\r\n\r\n        <div style=\"margin: 10px 0\">\r\n          <el-tag style=\"margin-right: 10px\" v-for=\"item in JSON.parse(logistics.tags || '[]')\" :key=\"item\">{{ item }}</el-tag>\r\n        </div>\r\n        <div style=\"margin: 10px 0; color: #ffa400; font-size: 18px; font-weight: bold\">￥{{ logistics.price }}</div>\r\n        <div style=\"margin: 20px 0; color: #666\">{{ logistics.address }}</div>\r\n\r\n        <div style=\"display: flex; margin: 10px 0;\">\r\n          <div style=\"width: 200px\"><span style=\"color: #666\">机构性质：</span>{{ logistics.nature }}</div>\r\n          <div style=\"flex: 1\"><span style=\"color: #666\">机构类型：</span>{{ logistics.type }}</div>\r\n        </div>\r\n        <div style=\"display: flex; margin: 10px 0;\">\r\n          <div style=\"width: 200px\"><span style=\"color: #666\">成立时间：</span>{{ logistics.date }}</div>\r\n          <div style=\"flex: 1\"><span style=\"color: #666\">床位数量：</span>{{ logistics.beds }}</div>\r\n        </div>\r\n        <div style=\"display: flex; margin: 10px 0;\">\r\n          <div style=\"width: 200px\"><span style=\"color: #666\">机构面积：</span>{{ logistics.area }}</div>\r\n        </div>\r\n\r\n        <div style=\"margin: 20px 0\">\r\n          电话：<span style=\"font-size: 20px; font-weight: bold; color: orangered\">{{ logistics.phone }}</span>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"margin: 30px 0\">\r\n      <div style=\"font-weight: bold; font-size: 22px; text-align: center; margin-bottom: 30px\">详细信息</div>\r\n\r\n      <div style=\"margin: 20px 0\">\r\n        <div id=\"container\" style=\"height: 400px; margin-bottom: 30px\"></div>\r\n      </div>\r\n\r\n      <div style=\"line-height: 26px\" class=\"w-e-text\">\r\n        <div v-html=\"logistics.content\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HouseDetail\",\r\n  data() {\r\n    return {\r\n      id: this.$route.query.id,\r\n      logistics: {},\r\n    }\r\n  },\r\n  created() {\r\n    // this.$request.put('/logistics/updateCount/' + this.id).then(res => {\r\n    //   this.load()\r\n    // })\r\n  },\r\n  methods: {\r\n    load() {\r\n      this.$request.get('/logistics/selectById/' + this.id).then(res => {\r\n        this.logistics = res.data || {}\r\n\r\n        // var map = new BMapGL.Map('container'); // 创建Map实例\r\n        // map.centerAndZoom(new BMapGL.Point(this.logistics.longitude, this.logistics.latitude), 16); // 初始化地图,设置中心点坐标和地图级别\r\n        // map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放\r\n        // let point = new BMapGL.Point(this.logistics.longitude, this.logistics.latitude)\r\n        // let marker = new BMapGL.Marker(point); // 创建标注\r\n        // map.addOverlay(marker);\r\n        // let opts = {\r\n        //   width : 300, // 信息窗口宽度\r\n        //   height: 100, // 信息窗口高度\r\n        //   title : this.logistics.name , // 信息窗口标题\r\n        // }\r\n        // let infoWindow = new BMapGL.InfoWindow(\r\n        //     \"<b>地址</b>：\" + this.logistics.address + \"<br/>\",\r\n        //     opts); // 创建信息窗口对象\r\n        //\r\n        // marker.addEventListener(\"click\", function(){\r\n        //   map.openInfoWindow(infoWindow,point); //开启信息窗口\r\n        // });\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAsDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,EAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;MACAG,SAAA;IACA;EACA;EACAC,QAAA;IACA;IACA;IACA;EAAA,CACA;EACAC,OAAA;IACAC,KAAA;MACA,KAAAC,QAAA,CAAAC,GAAA,iCAAAR,EAAA,EAAAS,IAAA,CAAAC,GAAA;QACA,KAAAP,SAAA,GAAAO,GAAA,CAAAX,IAAA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}